//******************************************************************************
// ライフ処理 [life.cpp]
// Author : 管原 司
//******************************************************************************

//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2d.h"
#include "player.h"
#include "life.h"
//******************************************************************************
// 静的メンバ変数
//******************************************************************************
LPDIRECT3DTEXTURE9 CLife::m_pTexture = NULL;
//******************************************************************************
// テクスチャ読み込み
//******************************************************************************
HRESULT CLife::Load(void)
{
	// デバイス取得
	LPDIRECT3DDEVICE9 pDevice = CSceneManager::GetRenderer()->GetDevice();
	// テクスチャ読み込み
	D3DXCreateTextureFromFile(pDevice, "data/Texture/PlayerLife.png", &m_pTexture);
	return S_OK;
}
//******************************************************************************
// テクスチャ破棄
//******************************************************************************
void CLife::Unload(void)
{
	// テクスチャ破棄
	m_pTexture->Release();
	m_pTexture = NULL;
}
//******************************************************************************
// コンストラクタ
//******************************************************************************
CLife::CLife(int nPriority) : CScene(nPriority)
{
	memset(m_apScene2D, 0, sizeof(m_apScene2D));
	m_pos		= D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_size		= D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_nNumLife	= 0;
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CLife::~CLife()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CLife * CLife::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// CLifeクラスのポインタ
	CLife * pLife;

	// メモリ確保
	pLife = new CLife;

	// 位置座標代入
	pLife->m_pos = pos;

	// サイズ代入
	pLife->m_size = size;

	// 初期化
	pLife->Init();

	// ポインタを返す
	return pLife;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CLife::Init()
{
	// ライフ数を3に
	m_nNumLife = PLAYER_LIFE;
	// 最大数分繰り返す

	for (int nCnt = 0; nCnt < MAX_LIFE; nCnt++)
	{
		//　メモリ確保
		m_apScene2D[nCnt] = new CScene2d;

		// 初期化
		m_apScene2D[nCnt]->Init();

		// カラー設定
		m_apScene2D[nCnt]->SetRGBA(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));

		// テクスチャ受け渡し
		m_apScene2D[nCnt]->BindTexture(m_pTexture);

		// 位置座標設定
		m_apScene2D[nCnt]->SetPosition(D3DXVECTOR3((m_pos.x + 50 * nCnt), m_pos.y, m_pos.z));

		//オブジェクトタイプの設定
		m_apScene2D[nCnt]->SetObjType(CScene::OBJTYPE_UI);
	}
	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CLife::Uninit(void)
{
	// 終了
	Release();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CLife::Update(void)
{
	
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CLife::Draw(void)
{
}
//******************************************************************************
// ライフ加算関数
//******************************************************************************
void CLife::AddLife(int nLife)
{
	m_nNumLife = nLife;
	// ライフ設定
	SetLife();
}
//******************************************************************************
// ライフ減算関数
//******************************************************************************
void CLife::HitDamage(int Damage)
{
	m_nNumLife -= Damage;
	// ライフ設定
	SetLife();
}
//******************************************************************************
// ライフ設定関数
//******************************************************************************
void CLife::SetLife(void)
{
	// ライフが3の場合
	if (m_nNumLife == 3)
	{
		m_apScene2D[0]->SetRGBA(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
		m_apScene2D[1]->SetRGBA(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
		m_apScene2D[2]->SetRGBA(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
	}
	// ライフが2の場合
	if (m_nNumLife == 2)
	{
		m_apScene2D[2]->SetRGBA(D3DXCOLOR(0.3f, 0.3f, 0.3f, 1.0f));
	}
	// ライフが1の場合
	if (m_nNumLife == 1)
	{
		m_apScene2D[1]->SetRGBA(D3DXCOLOR(0.3f, 0.3f, 0.3f, 1.0f));
	}
	// ライフが0の場合
	if (m_nNumLife == 0)
	{
		m_apScene2D[0]->SetRGBA(D3DXCOLOR(0.3f, 0.3f, 0.3f, 1.0f));
	}
}
