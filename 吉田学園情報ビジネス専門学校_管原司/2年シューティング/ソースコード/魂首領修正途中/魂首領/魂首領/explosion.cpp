//******************************************************************************
// 爆発 [explosion.cpp]
// Author : 管原　司
//******************************************************************************

//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2d.h"
#include "explosion.h"
//******************************************************************************
// 静的メンバ変数
//******************************************************************************
LPDIRECT3DTEXTURE9 CExplosion::m_pTexture = NULL;
//******************************************************************************
// テクスチャ読み込み
//******************************************************************************
HRESULT CExplosion::Load(void)
{
	//デバイス取得
	LPDIRECT3DDEVICE9 pDevice = CSceneManager::GetRenderer()->GetDevice();
	//テクスチャ読み込み
	D3DXCreateTextureFromFile(pDevice, "data/Texture/explosion000.png", &m_pTexture);
	return S_OK;
}
//******************************************************************************
// テクスチャ破棄
//******************************************************************************
void CExplosion::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//******************************************************************************
// コンストラクタ
//******************************************************************************
CExplosion::CExplosion(int nPriority) : CScene2d(nPriority)
{
	m_nCountAnim	= 0;
	m_nPatternAnim	= 0;
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CExplosion::~CExplosion()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CExplosion * CExplosion::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// CExplosionクラスのポインタ
	CExplosion * pExplosion;

	// メモリ確保
	pExplosion = new CExplosion;

	// 位置座標設定
	pExplosion->SetPosition(pos);

	// サイズ設定
	pExplosion->SetSize(size);

	// 初期化
	pExplosion->Init();

	// ポインタを返す
	return pExplosion;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CExplosion::Init()
{
	//初期化
	CScene2d::Init();

	//爆発の初期設定
	m_nCountAnim = 0;
	m_nPatternAnim = 0;

	// カラー設定
	SetRGBA(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));

	// テクスチャ受け渡し
	BindTexture(m_pTexture);

	// オブジェクトタイプ設定
	SetObjType(CScene::OBJTYPE_EXPLOSION);

	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CExplosion::Uninit(void)
{
	//終了
	CScene2d::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CExplosion::Update(void)
{
	//更新
	CScene2d::Update();

	//カウントインクリメント
	m_nCountAnim++;

	//カウントが4以上になった場合
	if (m_nCountAnim > 4)
	{
		// カウントを0に
		m_nCountAnim = 0;

		//テクスチャセット
		SetTexture(m_nPatternAnim * 0.125f, 0.0f, 0.125f, 1.0f);

		//パターンのインクリメント
		m_nPatternAnim++;

		//パターンが8になった場合
		if (m_nPatternAnim > 8)
		{
			//終了
			Uninit();
			return;
		}
	}
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CExplosion::Draw(void)
{
	//描画
	CScene2d::Draw();
}