//******************************************************************************
// ランキングポリゴン [ranking_polygon.cpp]
// Author : 管原　司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "sound.h"
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2d.h"
#include "polygon.h"
#include "ranking_polygon.h"
//******************************************************************************
// コンストラクタ
//******************************************************************************
CRanking_Polygon::CRanking_Polygon(int nPriority) : CPolygon(nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CRanking_Polygon::~CRanking_Polygon()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CRanking_Polygon * CRanking_Polygon::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, D3DXCOLOR col, TEX_TYPE textype)
{
	//　CRanking_Polygonクラスのポインタ
	CRanking_Polygon *pRanking_Polygon;

	// メモリ確保
	pRanking_Polygon = new CRanking_Polygon;

	// 情報設定
	pRanking_Polygon->SetPolygon(pos, size, col, textype);

	// 初期化
	pRanking_Polygon->Init();

	// ポインタを返す
	return pRanking_Polygon;

}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CRanking_Polygon::Init()
{
	//　初期化
	CPolygon::Init();

	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CRanking_Polygon::Uninit(void)
{
	//　終了
	CPolygon::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CRanking_Polygon::Update(void)
{
	//　更新
	CPolygon::Update();
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CRanking_Polygon::Draw(void)
{
	//　描画
	CPolygon::Draw();
}